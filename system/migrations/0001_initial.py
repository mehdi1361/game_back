# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-10-07 09:26
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='created date')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('active_gem', models.PositiveIntegerField(default=10, verbose_name='active gem')),
                ('level_1_complete_reward', models.PositiveIntegerField(default=10, verbose_name='level 1 complete reward')),
                ('level_2_complete_reward', models.PositiveIntegerField(default=20, verbose_name='level 2 complete reward')),
                ('level_3_complete_reward', models.PositiveIntegerField(default=30, verbose_name='level 3 complete reward')),
                ('game_active_price', models.PositiveIntegerField(default=30, verbose_name='level 3 complete reward')),
            ],
            options={
                'verbose_name': 'game',
                'verbose_name_plural': 'games',
                'db_table': 'game',
            },
        ),
        migrations.CreateModel(
            name='PurchaseLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='created date')),
                ('store_purchase_token', models.CharField(max_length=100, verbose_name='store purchase token')),
                ('store_params', models.CharField(max_length=100, verbose_name='store params')),
            ],
            options={
                'verbose_name': 'purchase_log',
                'verbose_name_plural': 'purchase_logs',
                'db_table': 'purchase_log',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='created date')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('quantity', models.PositiveIntegerField(default=10, verbose_name='quantity')),
                ('price', models.PositiveIntegerField(default=10, verbose_name='price')),
                ('active', models.BooleanField(default=False, verbose_name='active')),
            ],
            options={
                'verbose_name': 'shop',
                'verbose_name_plural': 'shops',
                'db_table': 'shop',
            },
        ),
        migrations.CreateModel(
            name='SmsSender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='created date')),
                ('receptor', models.CharField(max_length=20, verbose_name='receptor')),
                ('message', models.TextField(blank=True, verbose_name='message')),
                ('status', models.CharField(choices=[('queued', 'queued'), ('sending', 'sending'), ('sent', 'sent'), ('failed', 'failed')], default='queued', max_length=10, verbose_name='status')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verification_messages', to=settings.AUTH_USER_MODEL, verbose_name='profile')),
            ],
            options={
                'verbose_name': 'sms_sender',
                'verbose_name_plural': 'sms_senders',
                'db_table': 'sms_sender',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='created date')),
                ('name', models.CharField(max_length=50, verbose_name='store name')),
                ('valid_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='valid name')),
                ('access_token', models.CharField(blank=True, max_length=50, null=True, verbose_name='access token')),
                ('refresh_token', models.CharField(blank=True, max_length=50, null=True, verbose_name='refresh token')),
            ],
            options={
                'verbose_name': 'store',
                'verbose_name_plural': 'stores',
                'db_table': 'stores',
            },
        ),
        migrations.AddField(
            model_name='shop',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='system.Store', verbose_name='store'),
        ),
        migrations.AddField(
            model_name='purchaselog',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='system.Shop', verbose_name='shop'),
        ),
        migrations.AddField(
            model_name='purchaselog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_logs', to=settings.AUTH_USER_MODEL, verbose_name='profile'),
        ),
    ]
